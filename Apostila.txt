Apostila de Python
Autor: Cainã

1:
acessar o repositorio no github:
https://github.com/kkaldas/pyStuff

2:
Acessar o site Rextester e escolher a linguagem Python
https://rextester.com/l/python3_online_compiler
mas para exercícios com input() sugiro:
https://repl.it/languages/python3

3:
Verificar no repositorio o arquivo helloPython, ou algo parecido. E partiu falar sobre ele

4:
Verificar o arquivo sobre matemática.. acho que eh math.py e conversarmos sobre ele

4.1:
Fazer exercícios 0, 0.1, 0.2, 0.3, 0.4, 0.5 e 0.6

5:
Verificar o arquivo conditionals.py e conversarmos

5.1:
Faazer exercícios 0.7 e 0.8

6:
Verificar o arquivo sobre input e conversarmos
note que quando se usa a função input() no rextester, tem que digitar o
que foi pedido antes de executar o programa numa text box que tem ali entre o codigo
e o console. Se não, dá erro.

7:
Verificar o arquivo loops e conversarmos

8: Exercícios

<math.py>
Exercício 0: implemente o seguinte código C# em Python
Para converter explicitamente para string, faça: str(variavel)

    string text = "meutexto";
    int meuInt = 4;
    float meuFloat = 3.5f;
    bool meuBool = true;

    Console.WriteLine(text + " " + meuInt
                      + " " + meuFloat + " "
                     + " " + meuBool);

Exercício 0.1: <math.py>
criar uma variável chamada ataque, e uma chamada defesa. Então imprimir uma
mensagem informando o dano. Considere o dano igual a ataque menos defesa.

<math.py>
exercício 0.2:
Imagine que o personagem do "Exercício 0.1" conseguiu um acerto crítico em
seu ataque. Em caso de acerto crítico, o ataque deve ser multiplicado por uma
variável chamada crit para o cálculo do dano. Responda com o código informando
o dano nesse caso de acerto crítico. Crit pode valer 2, ou 3, por exemplo.

<math.py>
exercício 0.3:
Suponha que um personagem anda 3 metros por turno.
Faça um programa que calcule quantos metros esse personagem pode andar em
x turnos, sendo x uma variável.

<math.py>
exercício 0.4:
Suponha que um personagem está carregando uma espada, um escudo, sua armadura,
e mais alguns itens que você deve inventar. Faça um programa que some o peso
e o imprima.

<math.py>
exercício 0.5:
Imagine que um personagem está carregando x maçãs, sendo que cada maçã tem um
peso y. Faça um programa que calcule o peso que o personagem está carregando,
de acordo com x e y, e imprima o resultado.

<math.py>
exercício 0.6:
complete o código em Python:

ataque1 = "choque do trovao"
ataque2 = #completar
ataque3 = #completar

personagem1 = "pikachu"
personagem2 = #completar
personagem3 = #completar

fraseAcao1 = " atacou usando "
fraseAcao2 = #completar

print (personagem1 + fraseAtaque + ataque1)
#abaixo, exercitar a concatenação imprimindo frases que combinem ataques,
#personagens e frases de ação.
print (#completar)
print (#completar)
print (#completar)
print (#completar)

<conditionals.py>
Exercício 0.7:
modifique os valores das variáveis no script de maneira que ele sempre imprima
a fase certa e nunca imprima a frase errada. Não faça nenhuma alteração além de
modificar os valores das variáveis.

yeah = "frase certa"
nope = "frase errada"

#alterar
x = 3
y = 9

if ( x < y ):
  print(yeah)

#alterar
x = 9
y = 9

if ( x <= y ):
  print(nope)
else:
  print(yeah)

x = 7 #alterar

if ( x < 10 ):
  print(nope)
elif (x < 11):
  print(yeah)
else:
  print(nope)

<conditionals.py>
exercício 0.8:
modifique os valores das variáveis no script de maneira que ele sempre imprima
a fase certa e nunca imprima a frase errada. Não faça nenhuma alteração além de
modificar os valores das variáveis.
yeah = "frase certa"
nope = "frase errada"

x = 1 #alterar

if (x < 27 or x > 27):
  print(nope)
else:
  print(yeah)

x = 13 #alterar

if ( x/42 == 1 and x != "peixe"):
  print(yeah)
else:
  print(nope)

variavelBooleana = False

if (variavelBooleana):
  print(yeah)
else:
  print(nope)

maisUmaVar = True and False

if (variavelBooleana and maisUmaVar):
  print(yeah)
else:
  print(nope)

peixe = 5
if (2 + 2 == peixe):
  print(yeah)
else:
  print(nope)

quandoTerminarVoceVaiColarSeusCodigosNaSuaPastaDoDrive = "Talvez"

if (quandoTerminarVoceVaiColarSeusCodigosNaSuaPastaDoDrive != "sim!"):
  print(nope)
else:
  print(yeah)

<conditionals.py>
Exercício 1
1.0
Crie uma variável chamada num. Faça um programa que, dependendo do valor de num,
imprima informando se num é um valor negativo, nulo ou positivo.

<conditionals.py>
1.1
Faça o programa da 1.0, além de se o número é positivo, negativo ou nulo,
também se o mesmo número é expressivo ou inexpressivo.
Expressivo -> maior que 500 ou menor que -500.
Caso esteja entre -500 e 500 é considerado inexpressivo.

<loops.py>
Exercício 2.-2
faça um programa que imprima a frase "ajuda aqui professor" quinhentas mil vezes.

<loops.py>
Exercício 2.-1
Crie uma variável chamada i.
Faça um programa que imprima a seguinte frase, i vezes:
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"

<loops.py> <userInput.py>
Exercício 2 (obs: não faça esse no rextester. faça em
https://repl.it/languages/python3 - 02/03/2019)
Faça um programa que pergunte:
Era uma vez um gato chinês. Quer que eu conte outra vez?
Caso o usuário digite sim ou qualquer outra coisa não prevista, imprima de novo a frase do gato. Caso o usuário digite nao, finalize a execução.

<userInput.py>
Exercício 3 (usar método input)
Faça um programa que pede a altura e a largura de um retângulo e imprima sua área.
(área = altura * largura)

<userInput.py> <loops.py> <math.py(concatenação)>
Exercício 4
Faça um programa que pede ao usuário a altura e a largura. Então imprima um retângulo de asteriscos com a altura e a largura digitadas.
Exemplo para altura 4 e largura 3:
***
***
***
***

<userInput.py> <loops.py> <math.py(concatenação)>
Exercício 4.1
Faça um programa que imprima um retângulo nos mesmos princípios do exercício 4,
no entanto, o retângulo deve ser ôco, não contendo asteriscos no interior. Ou
seja, deve conter apenas os asteriscos externos, da borda. Exemplo para altura
e largura iguais a 4:
****
*  *
*  *
****

<userInput.py> <math.py>
Exercício avançado que Cainã não recomenda aos alunos fazerem por enquanto (02/03/2019)
Exercício 5
Faça um programa que recebe por input 2 pontos (x1,y1) e (x2,y2) de um imaginário plano cartesiano,
e imprima a sua equação da reta no formato: y = mx + n.
m =(y2 – y1) / (x2 – x1)
n = y1 - m*x1
Testá-la com algum web app ou usando a matemática mesmo.
web app: https://pt.symbolab.com/solver/line-equation-calculator/reta%20%5Cleft(2%2C3%5Cright)%20%5Cleft(3%2C5%5Cright)
